# Generated by Django 2.2.2 on 2019-06-23 11:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gestschools.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Compteutilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photo', models.ImageField(blank=True, upload_to='', validators=[gestschools.models.validate_file_extension], verbose_name='Image ')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ancien_etablissement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeancienetabli', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code ancien établissement')),
                ('libelleacetablng1', models.CharField(blank=True, max_length=30, null=True, verbose_name='Libellé ancien établissement langue1 ')),
                ('libelleacetablng2', models.CharField(blank=True, max_length=30, null=True, verbose_name='Libellé ancien établissement langue2')),
            ],
        ),
        migrations.CreateModel(
            name='Anneescolaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeanneescolaire', models.CharField(max_length=10, verbose_name='Code année scolaire')),
                ('libelleannee', models.CharField(max_length=60, verbose_name='Libellé année scolaire')),
                ('datedebut', models.DateField(verbose_name='Date de début')),
                ('datefin', models.DateField(verbose_name='Date de fin')),
                ('encours', models.IntegerField(verbose_name='Encours')),
            ],
        ),
        migrations.CreateModel(
            name='Arrondissement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codearrondissement', models.CharField(max_length=20, verbose_name='Code arrondissement')),
                ('libellearronlng1', models.CharField(max_length=60, verbose_name='Libellé1')),
                ('libellearronlng2', models.CharField(max_length=60, verbose_name='Libellé2')),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=130, verbose_name='Matricule')),
                ('numero', models.CharField(max_length=130, verbose_name='Numéro')),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeclasse', models.CharField(max_length=10, verbose_name='Code classe')),
                ('libelleclasse', models.CharField(max_length=60, verbose_name='Libellé')),
                ('effectif', models.CharField(max_length=30, verbose_name='Effectif')),
            ],
        ),
        migrations.CreateModel(
            name='Concours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeconcours', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code concours')),
                ('libelleconcours', models.CharField(max_length=30, verbose_name='Libellé concours*')),
                ('codecentrecon', models.CharField(max_length=30, null=True, verbose_name='Code centre')),
                ('session', models.CharField(blank=True, max_length=30, null=True, verbose_name='Session*')),
                ('montant', models.IntegerField(default=0, verbose_name='Montant*')),
                ('nbreplacesdisp', models.IntegerField(verbose_name='Nombres de place disponibles*')),
                ('nbreplaceattente', models.IntegerField(verbose_name='Nombres de place en attente*')),
                ('datedebutcon', models.CharField(max_length=30, verbose_name='Date début*')),
                ('datefincon', models.CharField(max_length=30, verbose_name='Date fin*')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire* ')),
            ],
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codecycle', models.CharField(max_length=10, verbose_name='Code cycle')),
                ('libellecyclelng1', models.CharField(max_length=60, verbose_name='Libellé cycle1')),
            ],
        ),
        migrations.CreateModel(
            name='Discipline_competence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codediscipline_compe', models.CharField(max_length=60, verbose_name='Code discipline')),
                ('libellediscipline_comlng', models.CharField(max_length=60, verbose_name='Libellé')),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeeleve', models.CharField(blank=True, max_length=30, verbose_name="Code de l'élève")),
                ('matriculeeleve', models.CharField(max_length=30, unique=True, verbose_name='Matricule')),
                ('civilite', models.CharField(choices=[('M.', 'Mr.'), ('Mme.', 'Mme.'), ('Mlle.', 'Mlle.')], max_length=30, null=True, verbose_name='Civilité')),
                ('nom', models.CharField(max_length=30, verbose_name='Nom ')),
                ('prenom', models.CharField(blank=True, max_length=60, null=True, verbose_name='Prenom')),
                ('lieunaiss', models.CharField(max_length=30, null=True, verbose_name='Lieu de naissance')),
                ('datenaissel', models.CharField(max_length=20, verbose_name='Date de naissance')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Feminin')], max_length=20, verbose_name='Sexe')),
                ('nationalite', models.CharField(max_length=30, null=True, verbose_name='Nationalité ')),
                ('emaileleve', models.CharField(blank=True, max_length=50, verbose_name='Email ')),
                ('teleeleve', models.CharField(blank=True, max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='Entre un numéro valide', regex='^6[5-9]([0-9]){7}$')], verbose_name='Téléphone ')),
                ('adresseeleve', models.CharField(max_length=90, null=True, verbose_name='Adresse ')),
                ('handicape', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], max_length=30, null=True, verbose_name='Handicape ')),
                ('langueofficielle', models.CharField(max_length=90, null=True, verbose_name='Langue officielle ')),
                ('numeroinscription', models.CharField(max_length=30, null=True, verbose_name="Numero d'inscription ")),
                ('modeadmission', models.CharField(blank=True, max_length=90, null=True, verbose_name="Mode d'admission ")),
            ],
        ),
        migrations.CreateModel(
            name='Elevecon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeeleveconc', models.CharField(blank=True, max_length=30, verbose_name="Code de l'élève")),
                ('matriculeelevec', models.CharField(max_length=30, unique=True, verbose_name='Matricule*')),
                ('nomeelevec', models.CharField(max_length=30, verbose_name='Nom* ')),
                ('prenomelevec', models.CharField(max_length=60, null=True, verbose_name='Prenom*')),
                ('datenaisselevec', models.CharField(max_length=20, verbose_name='Date de naissance*')),
                ('lieunaisselevec', models.CharField(max_length=30, null=True, verbose_name='Lieu de naissance*')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Feminin')], max_length=20, verbose_name='Sexe*')),
                ('civilite', models.CharField(choices=[('M.', 'Mr.'), ('Mme.', 'Mme.'), ('Mlle.', 'Mlle.')], max_length=30, null=True, verbose_name='Civilité*')),
                ('photo', models.FileField(blank=True, upload_to='', validators=[gestschools.models.validate_file_extension], verbose_name='Image ')),
                ('nationalite', models.CharField(max_length=30, null=True, verbose_name='Nationalité*')),
                ('handicape', models.CharField(choices=[('Oui', 'Oui'), ('Non', 'Non')], max_length=30, null=True, verbose_name='Handicape* ')),
                ('langueofficielle', models.CharField(max_length=90, null=True, verbose_name='Langue officielle* ')),
                ('emailelevec', models.CharField(blank=True, max_length=50, verbose_name='Email ')),
                ('teleelevec', models.CharField(blank=True, max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='Entre un numéro valide', regex='^6[5-9]([0-9]){7}$')], verbose_name='Téléphone ')),
                ('villeresidence', models.CharField(blank=True, max_length=30, null=True, verbose_name='ville ')),
                ('adresseel', models.CharField(max_length=90, null=True, verbose_name='Adresse* ')),
                ('modeadmission', models.CharField(max_length=90, null=True, verbose_name="Mode d'admission* ")),
                ('ancien_etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Ancien_etablissement', verbose_name='Ancien établissement*  ')),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('date_naiss', models.DateField(verbose_name='Date de Naissance')),
                ('lieu_naiss', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('telephone', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Entrer un numéro de telephone valide', regex='^6[5-9]([0-9]){7}$')], verbose_name='Téléphone')),
                ('civilite', models.CharField(choices=[('M.', 'Mr.'), ('Mme.', 'Mme.'), ('Mlle.', 'Mlle.')], max_length=30, null=True, verbose_name='Civilité')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Feminin')], max_length=20, verbose_name='Sexe')),
                ('profession', models.CharField(max_length=90, verbose_name='Profession')),
                ('nationalite', models.CharField(max_length=30, verbose_name='Nationalité')),
                ('adresseens', models.CharField(max_length=90, null=True, verbose_name='Adresse')),
                ('villeresidence', models.CharField(max_length=90, null=True, verbose_name='Ville de residence')),
                ('langueofficielle', models.CharField(max_length=90, null=True, verbose_name='Langue officielle')),
                ('villenaiss', models.CharField(max_length=50, verbose_name='Ville de naissance')),
                ('fax', models.CharField(max_length=30, null=True, verbose_name='  Fax         ')),
                ('regionorigine', models.CharField(max_length=50, null=True, verbose_name="Région d'origine")),
                ('departementorigine', models.CharField(max_length=250, null=True, verbose_name="Département d'origine")),
                ('diplomeacademique', models.CharField(max_length=250, verbose_name='Diplome académique')),
                ('diplomeprof', models.CharField(max_length=250, null=True, verbose_name='Diplome professionnel')),
                ('dataentreefonctionpublique', models.CharField(max_length=30, verbose_name="Date d'entrée en fonction publique")),
                ('datemiseretraite', models.CharField(max_length=30, null=True, verbose_name='Date de mise en retraite')),
                ('compte_utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Discipline_competence', verbose_name='Discipline')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeetablissement', models.CharField(max_length=30, verbose_name='Code établissement')),
                ('sigleetablissement', models.CharField(max_length=50, unique=True, verbose_name='Sigle établissement')),
                ('devise', models.CharField(max_length=50, null=True, verbose_name='Devise')),
                ('libelleetablng1', models.CharField(max_length=100, verbose_name='Libellé établissement langue1 ')),
                ('libelleetablng2', models.CharField(max_length=100, null=True, verbose_name='Libellé établissement langue2')),
                ('logo', models.FileField(blank=True, null=True, upload_to='', validators=[gestschools.models.validate_file_extension], verbose_name='Logo')),
                ('email', models.CharField(max_length=50, verbose_name='Email')),
                ('bp', models.CharField(max_length=20, verbose_name='BP')),
                ('tel', models.CharField(max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Entre un numéro valide', regex='^6[5-9]([0-9]){7}$')], verbose_name='Téléphone ')),
                ('fax', models.CharField(max_length=90, null=True, verbose_name='Fax ')),
                ('siteweb', models.CharField(max_length=30, null=True, verbose_name='Site web ')),
                ('datecreationetab', models.CharField(max_length=90, null=True, verbose_name='Date création établissement')),
                ('datetransformetab', models.CharField(blank=True, max_length=30, null=True, verbose_name='Date transformation établissement ')),
                ('libellerelevenotelng1', models.TextField(blank=True, null=True, verbose_name='Libellé relevé de note langue1 ')),
                ('libellerelevenotelng2', models.TextField(blank=True, null=True, verbose_name='Libellé relevé de note langue2 ')),
                ('libelleattestationlng1', models.TextField(blank=True, null=True, verbose_name='Libellé attestation langue1 ')),
                ('libelleattestationlng2', models.TextField(blank=True, null=True, verbose_name='Libellé attestation langue2')),
                ('mentionbaspagerelevelng1', models.TextField(blank=True, null=True, verbose_name='Mention bas page relevé langue1')),
                ('mentionbaspagerelevelng2', models.TextField(blank=True, null=True, verbose_name='Mention bas page relevé langue2 ')),
                ('mentionbaspageattestlng1', models.TextField(blank=True, null=True, verbose_name='Mention bas page attestation langue1 ')),
                ('mentionbaspageattestlng2', models.TextField(blank=True, null=True, verbose_name='Mention bas page attestation langue2 ')),
                ('titrechefetablng1', models.CharField(blank=True, max_length=120, null=True, verbose_name='Titre chef établissement langue1')),
                ('titrechefetablng2', models.CharField(blank=True, max_length=120, null=True, verbose_name='Titre chef établissement langue2')),
                ('chainedroitecertiflng1', models.TextField(blank=True, null=True, verbose_name='Chaine drote certificat langue1')),
                ('chainedroitecertiflng2', models.TextField(blank=True, null=True, verbose_name='Chaine drote certificat langue2')),
                ('libelleservicefinancier', models.CharField(blank=True, choices=[('Oui', 'Oui'), ('Non', 'Non')], max_length=120, null=True, verbose_name='Libellé service financier')),
                ('titredisciplinaire', models.TextField(blank=True, null=True, verbose_name='Titre disciplinaire')),
                ('libelledisciplinaire', models.TextField(blank=True, null=True, verbose_name='Libellé disciplinaire')),
                ('sanctiondisciplinaire', models.TextField(blank=True, null=True, verbose_name='Sanction disciplinaire')),
                ('smtp_server', models.CharField(blank=True, max_length=120, null=True, verbose_name='Serveur SMTP')),
                ('login_mail', models.CharField(blank=True, max_length=120, null=True, verbose_name='Login mail')),
                ('password_mail', models.CharField(blank=True, max_length=120, null=True, verbose_name='Password mail')),
                ('courriel_mail', models.CharField(blank=True, max_length=120, null=True, verbose_name='Courriel mail')),
                ('param_site', models.TextField(blank=True, null=True, verbose_name='Paramettrage du site')),
                ('libellecertifscolaritelng1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Libellé certificat de scolarité langue1')),
                ('libellecertifscolaritelng2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Libellé certificat de scolarité langue2')),
                ('chainesignattestation', models.TextField(blank=True, null=True)),
                ('chainesigcarteeleve', models.TextField(blank=True, null=True)),
                ('chainesigrelevenote', models.TextField(blank=True, null=True)),
                ('chainesigndiscipline', models.TextField(blank=True, null=True)),
                ('mentionbaspagecertifscollng1', models.TextField(blank=True, null=True, verbose_name='Mention bas page certificat de scolarité langue1 ')),
                ('mentionbaspagecertifscollng2', models.TextField(blank=True, null=True, verbose_name='Mention bas page certificat de scolarité langue2 ')),
            ],
        ),
        migrations.CreateModel(
            name='Groupematiere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codegroupematiere', models.CharField(max_length=60, verbose_name='Code groupe matière')),
                ('libellegroupematiere', models.CharField(max_length=60, verbose_name='Libellé groupe matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Matiereconcours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codematierecon', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code matière')),
                ('libellematcon', models.CharField(max_length=30, verbose_name='Libellé*')),
                ('noteeliminatoire', models.FloatField(default=0.0, verbose_name='Note éliminatoire*')),
                ('coefficientmatcon', models.IntegerField(default=0, verbose_name='Coefficient*')),
                ('notemax', models.FloatField(default=20.0, verbose_name='Note max*')),
            ],
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeniveau', models.CharField(max_length=30, verbose_name='Code du niveau')),
                ('libelleniveau', models.CharField(max_length=60, verbose_name='Libellé niveau')),
                ('diplomant', models.IntegerField(verbose_name='Diplomant')),
                ('bloquant', models.IntegerField(verbose_name='Bloquant')),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codepays', models.CharField(max_length=20, verbose_name='Code pays')),
                ('libellepayslng1', models.CharField(max_length=60, verbose_name='Libellé1')),
                ('libellepayslng2', models.CharField(max_length=60, verbose_name='Libellé2')),
                ('devisepayslng1', models.CharField(max_length=60, null=True, verbose_name='Devise1')),
                ('devisepayslng2', models.CharField(max_length=60, null=True, verbose_name='Devise2')),
                ('monnaiepays', models.CharField(max_length=60, null=True, verbose_name='Monnaie')),
            ],
        ),
        migrations.CreateModel(
            name='Periodeeval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelleperiode', models.CharField(max_length=100, verbose_name='Libellé Période')),
                ('datedebut', models.DateField(verbose_name='Date de début')),
                ('datefin', models.DateField(verbose_name='Date de fin')),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('date_naiss', models.DateField(verbose_name='Date de Naissance')),
                ('lieu_naiss', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('telephone', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Entrer un numéro de telephone valide', regex='^6[5-9]([0-9]){7}$')], verbose_name='Téléphone')),
                ('codepersonnel', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code personnel')),
                ('civilite', models.CharField(choices=[('M.', 'Mr.'), ('Mme.', 'Mme.'), ('Mlle.', 'Mlle.')], max_length=30, null=True, verbose_name='Civilité')),
                ('matriculepers', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Matricule personnel')),
                ('numcni', models.CharField(max_length=255, verbose_name='Num CNI')),
                ('datedelivcni', models.CharField(blank=True, max_length=90, null=True, verbose_name='Date de livraison CNI')),
                ('lieudelivcni', models.CharField(blank=True, max_length=120, verbose_name='Lieu de livraison CNI')),
                ('persdelivcni', models.CharField(blank=True, max_length=120, null=True, verbose_name='Personne de livraison CNI')),
                ('villageorigine', models.CharField(blank=True, max_length=120, null=True, verbose_name="Village d'origine")),
                ('profession', models.CharField(max_length=120, verbose_name='Profession')),
                ('nbreenfant', models.IntegerField(verbose_name="Nombres d'enfants")),
                ('nomsenfants', models.TextField(blank=True, verbose_name='Noms des enfants')),
                ('nomination', models.CharField(blank=True, max_length=120, null=True, verbose_name='Nomination')),
                ('diplomesprof', models.CharField(blank=True, max_length=130, null=True, verbose_name='Diplome professionnel')),
                ('lieudenaiss', models.CharField(max_length=30, verbose_name='Lieu de naissance')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Feminin')], max_length=20, verbose_name='Sexe')),
                ('fonctionscivil', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fonction civil')),
                ('dateentreefctpub', models.CharField(blank=True, max_length=90, null=True, verbose_name="Date d'entrée en fonction publique")),
                ('telephoneconj', models.CharField(max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='Entre un numéro de téléphone valide', regex='^6[5-9]([0-9]){7}$')], verbose_name='Tel conjoint ')),
                ('nomconj', models.CharField(blank=True, max_length=120, null=True, verbose_name='Nom conjoint')),
                ('BP', models.CharField(blank=True, max_length=120, null=True, verbose_name='BP')),
                ('fax', models.CharField(blank=True, max_length=120, null=True, verbose_name='Fax')),
                ('diplomeacad', models.CharField(blank=True, max_length=120, null=True, verbose_name='Diplome academique')),
                ('compte_utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('etablissement', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Etablissement', verbose_name='Etablissement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plage_horaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeplage_horaire', models.CharField(max_length=30, null=True, verbose_name='Code plage horaire')),
                ('libelleplage1', models.CharField(max_length=30, null=True, verbose_name='Libellé plage1')),
                ('libelleplage2', models.CharField(default='', max_length=30, null=True, verbose_name='Libellé plage2')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codesection', models.CharField(max_length=30, verbose_name='Code section')),
                ('libellesectionlng1', models.CharField(max_length=60, verbose_name='Libellé section1')),
                ('libellesectionlng2', models.CharField(max_length=60, verbose_name='Libellé section2')),
                ('cycle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Cycle', verbose_name='Cycle')),
            ],
        ),
        migrations.CreateModel(
            name='Trimestre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codetrimestre', models.CharField(choices=[('1er Trim', '1er Trim'), ('2e Trim', '2e Trim'), ('3e Trim', '3e Trim')], max_length=10, verbose_name='Code trimestre')),
                ('libelletrimestre', models.CharField(max_length=60, verbose_name='Libellé trimestre')),
                ('ordretrim', models.IntegerField(verbose_name='Ordre trimestre')),
            ],
        ),
        migrations.CreateModel(
            name='Typefrais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codetypefrais', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code type frais')),
                ('libelletypefraislng1', models.CharField(max_length=130, null=True, verbose_name='Libellé type frais1')),
                ('libelletypefraislng2', models.CharField(blank=True, max_length=130, null=True, verbose_name='Libellé type frais2')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=130, verbose_name='Libellé')),
                ('description', models.CharField(blank=True, max_length=130, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeville', models.CharField(max_length=20, verbose_name='Code ville')),
                ('libellevillelng1', models.CharField(max_length=60, verbose_name='Libellé1')),
                ('libellevillelng2', models.CharField(max_length=60, verbose_name='Libellé2')),
                ('arrondissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Arrondissement', verbose_name='Arrondissement')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeservice', models.CharField(max_length=30, verbose_name='Code service')),
                ('libelleservice', models.CharField(max_length=30, verbose_name='Libellé service')),
                ('etablissement', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Etablissement', verbose_name='Etablissement')),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeserie', models.CharField(max_length=30, verbose_name='Code série')),
                ('libelleserielng1', models.CharField(max_length=60, verbose_name='Libellé')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Section', verbose_name='Section')),
            ],
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codesequence', models.CharField(choices=[('1seq', '1seq'), ('2seq', '2seq'), ('3seq', '3seq'), ('4seq', '4seq'), ('5seq', '5seq'), ('6seq', '6seq')], max_length=10, verbose_name='Code Séquence')),
                ('libelleseq', models.CharField(max_length=60, verbose_name='Libellé séquence')),
                ('datedebut', models.DateField(verbose_name='Date de début')),
                ('datefin', models.DateField(verbose_name='Date de fin')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire')),
                ('trimestre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Trimestre', verbose_name='Trimestre')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeRegion', models.CharField(max_length=20, verbose_name='code région')),
                ('libelleRegionlng1', models.CharField(max_length=60, verbose_name='Libellé région1')),
                ('libelleRegionlng2', models.CharField(max_length=60, verbose_name='Libellé région2')),
                ('libelledelegationlng1', models.CharField(max_length=60, verbose_name='Libellé délégation régional1')),
                ('libelledelegationlng2', models.CharField(max_length=60, verbose_name='Libellé délégation régional2')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Pays', verbose_name='Pays')),
            ],
        ),
        migrations.CreateModel(
            name='Programme_trans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heurdepart', models.TimeField(blank=True, max_length=30, null=True, verbose_name='Heur de départ')),
                ('date', models.CharField(blank=True, max_length=30, null=True, verbose_name='Date')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Bus', verbose_name='Bus')),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Personnel', verbose_name='Personnel ')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Zone', verbose_name='Zone ')),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeprogramme', models.CharField(max_length=60, null=True, verbose_name='Code programme')),
                ('libelleprogramme', models.CharField(max_length=60, verbose_name='Libellé programme')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Niveau', verbose_name='Niveau')),
                ('serie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Serie', verbose_name='Série')),
            ],
        ),
        migrations.CreateModel(
            name='Preinscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codepreinscription', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code préinscription')),
                ('elligibilite', models.SmallIntegerField(default=0, null=True, verbose_name='Elligibilité')),
                ('redouble', models.SmallIntegerField(default=0, null=True, verbose_name='Redouble')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire')),
                ('eleve', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Eleve', verbose_name='Elève')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Niveau', verbose_name='Classe')),
            ],
        ),
        migrations.AddField(
            model_name='personnel',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Service', verbose_name='Service'),
        ),
        migrations.CreateModel(
            name='Parents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeparents', models.CharField(blank=True, max_length=30, verbose_name='Code parent')),
                ('nompere', models.CharField(max_length=60)),
                ('telpere', models.CharField(max_length=30, null=True, verbose_name='Tel père')),
                ('professionpere', models.CharField(max_length=30, null=True, verbose_name='Profession père')),
                ('nommere', models.CharField(max_length=30, verbose_name='Nom mère')),
                ('telmere', models.CharField(max_length=30, null=True, verbose_name='Tel mère')),
                ('professionmere', models.CharField(blank=True, max_length=20, null=True, verbose_name='Profession mère')),
                ('nomtuteur', models.CharField(max_length=20, verbose_name='Nom tuteur')),
                ('teltuteur', models.CharField(max_length=90, verbose_name='Tel tuteur')),
                ('emailparent', models.CharField(blank=True, max_length=50, null=True, verbose_name='Email parents')),
                ('bpparent', models.CharField(blank=True, max_length=30, verbose_name='BP parents')),
                ('professiontuteur', models.CharField(blank=True, max_length=90, null=True, verbose_name='Profession tuteur')),
                ('residencetuteur', models.CharField(blank=True, max_length=90, null=True, verbose_name='Residence tuteur')),
                ('emailtuteur', models.CharField(max_length=90, null=True, verbose_name='Email tuteur')),
                ('residenceparents', models.CharField(blank=True, max_length=90, null=True, verbose_name='Residence parents')),
                ('ville', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Ville', verbose_name='Ville')),
            ],
        ),
        migrations.CreateModel(
            name='Moyennesequentiel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('absence', models.CharField(max_length=30, null=True, verbose_name='Absence')),
                ('codemoyenneseq', models.CharField(max_length=30, null=True, verbose_name='Code moyenne séquence')),
                ('decisionseq', models.CharField(max_length=255, null=True, verbose_name='Décision séquence')),
                ('moyenneseq', models.CharField(max_length=255, null=True, verbose_name='Moyenne séquence')),
                ('listematieremauvais', models.CharField(max_length=255, null=True, verbose_name='Liste matière mauvaise')),
                ('rangs', models.CharField(max_length=20, verbose_name='Rangs')),
                ('moyennepremier', models.CharField(max_length=30, verbose_name='Moyenne première')),
                ('moyennedernier', models.CharField(max_length=30, verbose_name='Moyenne dernière')),
                ('appreciationtravail', models.CharField(max_length=255, verbose_name='Appréciation du travail')),
                ('appreciationconduite', models.CharField(max_length=255, verbose_name='Appréciation conduite')),
                ('moyennegeneraleclasse', models.CharField(max_length=90, verbose_name='Moyenne générale de la classe')),
                ('tableauhonneur', models.CharField(max_length=20, verbose_name="Tableau d'honneur")),
                ('encouragements', models.CharField(max_length=20, null=True, verbose_name='Encouragements')),
                ('felicitation', models.CharField(max_length=20, verbose_name='Félicitation')),
                ('avertissementtravail', models.CharField(max_length=20, verbose_name='Avertissement travail')),
                ('avertissementconduite', models.CharField(max_length=20, verbose_name='Avertissement conduite')),
                ('blametravail', models.CharField(max_length=20, verbose_name='Blame travail')),
                ('blameconduite', models.CharField(max_length=20, verbose_name='Blame conduite')),
                ('exclusions', models.CharField(max_length=20, verbose_name='Exclusions')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Classe', verbose_name='Classe')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Eleve', verbose_name='Elève')),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Sequence', verbose_name='Séquence')),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libellematiere', models.CharField(max_length=100, verbose_name='Libellé  matiere')),
                ('coef', models.IntegerField(verbose_name='Coef')),
                ('groupematiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Groupematiere', verbose_name='Groupe matière')),
            ],
        ),
        migrations.CreateModel(
            name='InscriptionCon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeinscripcon', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code inscription')),
                ('inscrit', models.SmallIntegerField(default=0, verbose_name='Inscrit*')),
                ('dateinscription', models.CharField(max_length=30, verbose_name='Date inscription*')),
                ('dateinscriptionConfirme', models.CharField(max_length=30, null=True, verbose_name='Date confirmation')),
                ('concours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Concours', verbose_name='Concours* ')),
                ('elevecon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Elevecon', verbose_name='Elève*')),
            ],
        ),
        migrations.AddField(
            model_name='groupematiere',
            name='programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Programme', verbose_name='Programme'),
        ),
        migrations.CreateModel(
            name='Fraispayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codefraispayer', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code frais payer')),
                ('montant', models.IntegerField(null=True, verbose_name='Montant')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire ')),
                ('niveau', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Niveau', verbose_name='Niveau')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Serie', verbose_name='Série ')),
                ('typefrais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Typefrais', verbose_name='Type frais')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeevaluation', models.CharField(max_length=20, null=True, verbose_name='Code évaluation')),
                ('dateeval', models.DateField(verbose_name="Date de l'évaluation")),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Classe', verbose_name='Classe')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Matiere', verbose_name='Matière')),
                ('periodeeval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Periodeeval', verbose_name='Période évaluation')),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Sequence', verbose_name='Séquence')),
            ],
        ),
        migrations.AddField(
            model_name='etablissement',
            name='ville',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Ville', verbose_name='Ville  '),
        ),
        migrations.CreateModel(
            name='Enseignant_titulaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeeenseignanttitulaire', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code enseignant titulaire')),
                ('dateaffectation', models.CharField(blank=True, max_length=30, null=True, verbose_name='Date affectation')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire ')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Classe', verbose_name='Classe')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Enseignant', verbose_name='Enseignant ')),
            ],
        ),
        migrations.AddField(
            model_name='elevecon',
            name='parents',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Parents', verbose_name='Parent*  '),
        ),
        migrations.AddField(
            model_name='eleve',
            name='parents',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Parents', verbose_name='Parent  '),
        ),
        migrations.CreateModel(
            name='Departementgeo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codedepartementgeo', models.CharField(max_length=20, verbose_name='Code département')),
                ('libelledepartlng1', models.CharField(max_length=60, verbose_name='Libellé département1')),
                ('libelledepartlng2', models.CharField(max_length=60, verbose_name='Libellé département2')),
                ('libelledelegationdeparlng1', models.CharField(max_length=60, verbose_name='Libellé délégation départemental1')),
                ('libelledelegationdeparlng2', models.CharField(max_length=60, verbose_name='Libellé délégation départemental2')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Region', verbose_name='Region')),
            ],
        ),
        migrations.CreateModel(
            name='Coursdispenser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codecoursdispenser', models.CharField(blank=True, max_length=60, null=True, verbose_name='Code cours dispenser')),
                ('jours', models.CharField(max_length=20, null=True, verbose_name='Jours')),
                ('duree', models.CharField(blank=True, max_length=20, null=True, verbose_name='Durée')),
                ('matiere', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Matiere', verbose_name='Matière')),
                ('plage_horaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Plage_horaire', verbose_name='Plage_horaire')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Programme', verbose_name='Programme')),
            ],
        ),
        migrations.AddField(
            model_name='concours',
            name='niveau',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Niveau', verbose_name='Niveau*'),
        ),
        migrations.AddField(
            model_name='classe',
            name='niveau',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Niveau', verbose_name='Niveau'),
        ),
        migrations.AddField(
            model_name='classe',
            name='serie',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Serie', verbose_name='Série'),
        ),
        migrations.AddField(
            model_name='arrondissement',
            name='departement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Departementgeo', verbose_name='Departement'),
        ),
        migrations.CreateModel(
            name='Animateur_pedagogique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeanimateur', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code animateur')),
                ('dateselection', models.CharField(blank=True, max_length=30, null=True, verbose_name='Date sélection')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire ')),
                ('discipline_competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Discipline_competence', verbose_name='Discipline compétence')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Enseignant', verbose_name='Enseignant ')),
            ],
        ),
        migrations.CreateModel(
            name='Affecter_classe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeaffecter_classe', models.CharField(blank=True, max_length=30, null=True, verbose_name="Code d'affectation")),
                ('inscrit', models.SmallIntegerField(default=0, null=True, verbose_name='Inscrit')),
                ('paye', models.SmallIntegerField(default=0, null=True, verbose_name='Paye')),
                ('numrecu', models.CharField(blank=True, default=0, max_length=100, null=True, verbose_name='Numéro recu')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Classe', verbose_name='Classe')),
                ('eleve', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Eleve', verbose_name='Elève')),
            ],
        ),
        migrations.CreateModel(
            name='Affectation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeaffectation', models.CharField(max_length=20, null=True, verbose_name='Code affectation')),
                ('anneescolaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Anneescolaire', verbose_name='Année scolaire')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Enseignant', verbose_name='Enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Matiere', verbose_name='Matière')),
            ],
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('date_naiss', models.DateField(verbose_name='Date de Naissance')),
                ('lieu_naiss', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('telephone', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Entrer un numéro de telephone valide', regex='^6[5-9]([0-9]){7}$')], verbose_name='Téléphone')),
                ('compte_utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeeabcence', models.CharField(max_length=20, null=True, verbose_name='Code absence')),
                ('justifier', models.IntegerField(default=0, null=True, verbose_name='Justifier')),
                ('nonjustifier', models.IntegerField(default=0, null=True, verbose_name='Non justifier')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestschools.Classe', verbose_name='Classe')),
                ('eleve', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Eleve', verbose_name='Elève')),
                ('sequence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gestschools.Sequence', verbose_name='Séquence')),
            ],
        ),
    ]
